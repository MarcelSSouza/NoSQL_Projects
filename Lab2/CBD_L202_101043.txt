# CBD – Lab201 – Marcel Santos Souza
QUESTOES
AO FIM DO QUINTO QUERY, OMITI OS OUTPUTS PARA POUPAR ESPAÇO NO TXT

1- db.restaurants.find()

2-> db.restaurants.find({}, {"nome":1,"localidade":1,"gastronomia":1,"restaurant_id":1}).pretty()

3-> db.restaurants.find({}, {"nome":1,"localidade":1,"address.zipcode":1,"_id":0,"restaurant_id":1}).pretty()

4-> db.restaurants.find({"localidade":"Bronx"}).pretty().count()

5-> db.restaurants.find({"localidade":"Bronx"}, {"nome":1}).sort({nome:1}).limit(15)

6-db.restaurants.find({"grades.score": $gt: 85})

7-db.restaurants.find( { grades: { $elemMatch: { score: { $gte:80, $lte:100 } } } } )

8-db.restaurants.find( { "address.coord.0": { $lt:-95.7 } } )

9-db.restaurants.find( { "address.coord.0": { $lt:-65 }, "grades.score": { $gt:70 }, "gastronomia": { $ne:"American" } } )

10-db.restaurants.find( { "nome": { $regex: "^Wil*" } }, { restaurant_id:1, nome:1, localidade:1, gastronomia:1 } )

11-db.restaurants.find({"localidade": "Bronx","gastronomia": { $in : ["American","Chinese"]} },{nome:1 , "localidade":1 , "gastronomia":1 ,_id : 0})

12-db.restaurants.find({"localidade": { $in: ["Bronx","Staten Island","Queens"]} },{"restaurant_id":1,"nome":1 , "localidade":1 , "gastronomia":1 ,_id : 0})

13-db.restaurants.find({ "grades.score": { $lte: 3 }} } },{"nome":1 , "localidade":1 , "gastronomia":1,"grades.score":1,_id:0} )
CONSERTAR

14-db.restaurants.find({ "grades": { $elemMatch: { "grade": "A","score":10 ,"date": ISODate("2014-08-11T00:00:00Z")} } },{"nome":1,"grades":1,_id:0} )

15-db.restaurants.find({"grades.1.grade": "A", "grades.1.date": ISODate("2014-08-11T00:00:00Z")},{"restaurant_id":1,"nome":1,"grades" : {$slice : [1,1]},_id:0}).pretty()

16-db.restaurants.find({"address.coord.1": {$gt: 48, $lte:52} },{"nome":1,"restaurant_id":1,"address":1,_id:0}).pretty()

17-db.restaurants.find({},{"nome":1,"gastronomia":1,"localidade":1,_id:0}).sort({"gastronomia":1,"localidade":-1})

18- db.restaurants.find({"grades.grade": "A","gastronomia": {$ne: "American"}},{"nome":1,"localidade":1,"grades.grade":1,"gastronomia":1,_id:0}).sort({"gastronomia":-1})

19-db.restaurants.aggregate([{"$group" : {_id:"$localidade", count:{$sum:1}}}])

20- db.restaurants.aggregate([{ $unwind: "$grades" },{$group : {_id:{nome:"$nome", restaurant_id:"$restaurant_id"}, averageScore:{$avg:"$grades.score"}}},{ $match: {averageScore: {$gt: 30}}}])

21-db.restaurants.aggregate([{ $unwind: "$grades" },{$group : {_id:{nome:"$nome", gastronomia:"$gastronomia" ,restaurant_id:"$restaurant_id"},coords: { $first: "$address.coord" }  ,sumScore:{$sum:"$grades.score"}}},{ $match: {sumScore: {$gt: 50}, "_id.gastronomia": "Portuguese","coords.0": {$lt: -60}}}])

22-db.restaurants.aggregate({$unwind: "$grades"},{$group: {_id:"$nome",averageScore:{$avg: "$grades.score"}}},{$sort: {"averageScore":-1}},{$limit:3})

23-db.restaurants.aggregate([{ $match: { "address.rua": "Fifth Avenue" }} ,{$group: {_id:"$gastronomia",rua: { $first: "$address.rua" } ,numGastronomias:{$count: {}}}},{$group: {_id:"$rua",numeroGastronomias:{$sum: 1}}}])

24-db.restaurants.aggregate([{$group: {_id:"$gastronomia",rua: { $first: "$address.rua" } ,numGastronomias:{$count: {}}}},{$group: {_id:"$rua",numeroGastronomias:{$sum: 1}}},{$sort: {numeroGastronomias :-1}}])

25-db.restaurants.aggregate([ { $group: { _id:"$localidade", gastronomias: { $addToSet: "$gastronomia" } } }, { $sort: { _id:1 } } ])

26-db.restaurants.find( { grades: { $not: { $elemMatch: { date: { $gte: ISODate("2014-09-01T00:00:00Z") } } } } } )

27-db.restaurants.aggregate([ { $unwind: "$grades" }, { $sort: { "restaurant_id": 1, "grades.date":1 } }, { $group: { _id:"$restaurant_id", lastScore: { $last: "$grades.score" }, localidade: { $first: "$localidade" } } }, { $group: { _id: "$localidade", mediaScore: { $avg: "$lastScore" } } } ])

28-db.restaurants.aggregate([ { $unwind: "$grades" }, { $match: { "grades.grade": { $ne: "Not Yet Graded" } } }, { $group: { _id: { "localidade": "$localidade", "grade": "$grades.grade" }, numero: { $sum: 1 } } }, { $sort: { "_id.localidade": 1 } } ])

29-db.restaurants.aggregate([ { $unwind: "$grades" }, { $match: { "grades.grade": { $ne: "Not Yet Graded" } } }, { $group: { _id: { "restaurante": "$nome", "grade": "$grades.grade" }, numero: { $sum: 1 } } }, { $sort: { "_id.restaurante": 1 } } ])

30-db.restaurants.aggregate( { $group: { _id: "$address.zipcode", numeroRestaurantes: { $sum:1 } } }, { $sort: { numeroRestaurantes: -1 } } )
